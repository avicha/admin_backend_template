version: "3"
services:

  web:
    image: PROJECT_NAME-backend:${NODE_ENV}
    restart: always
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    depends_on:
      - redis
      - postgres
    env_file:
      - ../env/common.env
      - ../env/${NODE_ENV}.env
    environment:
      APP_VERSION: 1.0.0.1
      CODE_VERSION: ${CODE_VERSION}
    volumes:
      - "uploads:/usr/src/app/uploads"
    ports:
      - "16000:16000"
    networks:
      - webnet

  redis:
    image: PROJECT_NAME-redis:latest
    hostname: redis
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
        reservations:
          cpus: '0.25'
          memory: 20M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - "redis_data:/data"
    networks:
      - webnet

  postgres:
    image: PROJECT_NAME-postgres:latest
    hostname: postgres
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    ports:
      - "18001:5432"
    networks:
      - webnet

networks:
  webnet:

volumes:
  uploads:
  redis_data:
  pgdata:
